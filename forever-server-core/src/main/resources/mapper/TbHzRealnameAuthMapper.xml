<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gaoan.forever.mapper.TbHzRealnameAuthMapper">

    <!-- Result Map -->
    <resultMap id="BaseResultMap" type="com.gaoan.forever.entity.TbHzRealnameAuthEntity" >
        <result column="id" property="id" javaType="Long"/>
        <result column="user_id" property="userId" javaType="Long"/>
        <result column="real_name" property="realName" javaType="String"/>
        <result column="sex" property="sex" javaType="Integer"/>
        <result column="id_type_id" property="idTypeId" javaType="Long"/>
        <result column="id_num" property="idNum" javaType="String"/>
        <result column="id_positive_img" property="idPositiveImg" javaType="String"/>
        <result column="id_reverse_img" property="idReverseImg" javaType="String"/>
        <result column="id_on_hand_img" property="idOnHandImg" javaType="String"/>
        <result column="id_bank_on_hand_img" property="idBankOnHandImg" javaType="String"/>
        <result column="validity_start_date" property="validityStartDate" javaType="java.util.Date"/>
        <result column="validity_end_date" property="validityEndDate" javaType="java.util.Date"/>
        <result column="bank_num" property="bankNum" javaType="String"/>
        <result column="area_id" property="areaId" javaType="Long"/>
        <result column="status" property="status" javaType="Integer"/>
        <result column="remark" property="remark" javaType="String"/>
        <result column="id_review_time" property="idReviewTime" javaType="java.util.Date"/>
        <result column="bank_review_time" property="bankReviewTime" javaType="java.util.Date"/>
        <result column="create_time" property="createTime" javaType="java.util.Date"/>
        <result column="update_time" property="updateTime" javaType="java.util.Date"/>
    </resultMap>

    <!-- 通用查询结果列-->
    <sql id="Base_Column_List">
	id,user_id,real_name,sex,id_type_id,id_num,id_positive_img,id_reverse_img,id_on_hand_img,id_bank_on_hand_img,validity_start_date,validity_end_date,bank_num,area_id,status,remark,id_review_time,bank_review_time,create_time,update_time
    </sql>
    <!-- 通用WHERE条件 -->
    <sql id="Base_where_List">
        WHERE 1=1
        <if test="id != null">
            AND id = #{id}
        </if>
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
        <if test="realName != null and realName != ''">
            AND real_name = #{realName}
        </if>
        <if test="sex != null">
            AND sex = #{sex}
        </if>
        <if test="idTypeId != null">
            AND id_type_id = #{idTypeId}
        </if>
        <if test="idNum != null and idNum != ''">
            AND id_num = #{idNum}
        </if>
        <if test="idPositiveImg != null and idPositiveImg != ''">
            AND id_positive_img = #{idPositiveImg}
        </if>
        <if test="idReverseImg != null and idReverseImg != ''">
            AND id_reverse_img = #{idReverseImg}
        </if>
        <if test="idOnHandImg != null and idOnHandImg != ''">
            AND id_on_hand_img = #{idOnHandImg}
        </if>
        <if test="idBankOnHandImg != null and idBankOnHandImg != ''">
            AND id_bank_on_hand_img = #{idBankOnHandImg}
        </if>
        <if test="validityStartDate != null">
            AND validity_start_date = #{validityStartDate}
        </if>
        <if test="validityEndDate != null">
            AND validity_end_date = #{validityEndDate}
        </if>
        <if test="bankNum != null and bankNum != ''">
            AND bank_num = #{bankNum}
        </if>
        <if test="areaId != null">
            AND area_id = #{areaId}
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="remark != null and remark != ''">
            AND remark = #{remark}
        </if>
        <if test="idReviewTime != null">
            AND id_review_time = #{idReviewTime}
        </if>
        <if test="bankReviewTime != null">
            AND bank_review_time = #{bankReviewTime}
        </if>
        <if test="createTime != null">
            AND create_time = #{createTime}
        </if>
        <if test="updateTime != null">
            AND update_time = #{updateTime}
        </if>
    </sql>
    <!-- 查询（根据主键ID查询） -->
    <select id="queryByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM tb_hz_realname_auth
        WHERE id = #{id}
    </select>

    <!-- 查询（根据实体查询） -->
    <select id="queryInfoByEntity"  parameterType="com.gaoan.forever.entity.TbHzRealnameAuthEntity" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM tb_hz_realname_auth
        <include refid="Base_where_List" />
    </select>

    <!-- 查询记录列表 -->
    <select id="queryAllByParams" parameterType="map" resultType="map">
        SELECT
        <include refid="Base_Column_List" />
        FROM tb_hz_realname_auth
        <include refid="Base_where_List" />
        <if test="pager.orderCondition != null and pager.orderCondition != ''" >
            ${pager.orderCondition}
        </if>
    </select>

    <!-- 查询记录列表 -->
    <select id="queryAll" parameterType="com.gaoan.forever.entity.TbHzRealnameAuthEntity" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM tb_hz_realname_auth
        <include refid="Base_where_List" />
        ORDER BY id
    </select>

    <!-- 查询记录总数 -->
    <select id="queryCountByParams" resultType="java.lang.Long" parameterType="map">
        SELECT COUNT(1) FROM tb_hz_realname_auth
        <include refid="Base_where_List" />
    </select>

    <!-- 查询记录列表(分页) -->
    <select id="queryListByParams" parameterType="map" resultType="map">
        SELECT
        <include refid="Base_Column_List" />
        FROM tb_hz_realname_auth
        <include refid="Base_where_List" />
    </select>

    <!-- 查询记录总数 -->
    <select id="queryCount" resultType="java.lang.Long" parameterType="com.gaoan.forever.entity.TbHzRealnameAuthEntity">
        SELECT COUNT(1) FROM tb_hz_realname_auth
        <include refid="Base_where_List" />
    </select>

    <!-- 添加 -->
    <insert id="insert" parameterType="com.gaoan.forever.entity.TbHzRealnameAuthEntity" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tb_hz_realname_auth
        (user_id,real_name,sex,id_type_id,id_num,id_positive_img,id_reverse_img,id_on_hand_img,id_bank_on_hand_img,validity_start_date,validity_end_date,bank_num,area_id,status,remark,id_review_time,bank_review_time,create_time,update_time)
        VALUES
        (#{userId},#{realName},#{sex},#{idTypeId},#{idNum},#{idPositiveImg},#{idReverseImg},#{idOnHandImg},#{idBankOnHandImg},#{validityStartDate},#{validityEndDate},#{bankNum},#{areaId},#{status},#{remark},#{idReviewTime},#{bankReviewTime},#{createTime},#{updateTime})
    </insert>

    <!-- 添加 （匹配有值的字段）-->
    <insert id="insertSelective" parameterType="com.gaoan.forever.entity.TbHzRealnameAuthEntity" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tb_hz_realname_auth
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="userId != null">
            user_id,
            </if>
            <if test="realName != null and realName != ''"> 
            real_name,
            </if>
            <if test="sex != null">
            sex,
            </if>
            <if test="idTypeId != null">
            id_type_id,
            </if>
            <if test="idNum != null and idNum != ''"> 
            id_num,
            </if>
            <if test="idPositiveImg != null and idPositiveImg != ''"> 
            id_positive_img,
            </if>
            <if test="idReverseImg != null and idReverseImg != ''">
            id_reverse_img,
            </if>
            <if test="idOnHandImg != null and idOnHandImg != ''"> 
            id_on_hand_img,
            </if>
            <if test="idBankOnHandImg != null and idBankOnHandImg != ''"> 
            id_bank_on_hand_img,
            </if>
            <if test="validityStartDate != null">
            validity_start_date,
            </if>
            <if test="validityEndDate != null">
            validity_end_date,
            </if>
            <if test="bankNum != null and bankNum != ''"> 
            bank_num,
            </if>
            <if test="areaId != null">
            area_id,
            </if>
            <if test="status != null">
            status,
            </if>
            <if test="remark != null and remark != ''"> 
            remark,
            </if>
            <if test="idReviewTime != null">
            id_review_time,
            </if>
            <if test="bankReviewTime != null">
            bank_review_time,
            </if>
            create_time,
            update_time
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="userId != null">
            #{userId},
            </if>
            <if test="realName != null and realName != ''"> 
            #{realName},
            </if>
            <if test="sex != null">
            #{sex},
            </if>
            <if test="idTypeId != null">
            #{idTypeId},
            </if>
            <if test="idNum != null and idNum != ''"> 
            #{idNum},
            </if>
            <if test="idPositiveImg != null and idPositiveImg != ''"> 
            #{idPositiveImg},
            </if>
            <if test="idReverseImg != null and idReverseImg != ''">
            #{idReverseImg},
            </if>
            <if test="idOnHandImg != null and idOnHandImg != ''"> 
            #{idOnHandImg},
            </if>
            <if test="idBankOnHandImg != null and idBankOnHandImg != ''"> 
            #{idBankOnHandImg},
            </if>
            <if test="validityStartDate != null">
            #{validityStartDate},
            </if>
            <if test="validityEndDate != null">
            #{validityEndDate},
            </if>
            <if test="bankNum != null and bankNum != ''"> 
            #{bankNum},
            </if>
            <if test="areaId != null">
            #{areaId},
            </if>
            <if test="status != null">
            #{status},
            </if>
            <if test="remark != null and remark != ''"> 
            #{remark},
            </if>
            <if test="idReviewTime != null">
            #{idReviewTime},
            </if>
            <if test="bankReviewTime != null">
            #{bankReviewTime},
            </if>
            now(),
            now()
        </trim>
    </insert>

    <!-- 添加 -->
    <insert id="batchInsert">
        INSERT INTO tb_hz_realname_auth
        (user_id,real_name,sex,id_type_id,id_num,id_positive_img,id_reverse_img,id_on_hand_img,id_bank_on_hand_img,validity_start_date,validity_end_date,bank_num,area_id,status,remark,id_review_time,bank_review_time,create_time,update_time)
        VALUES
        <foreach collection="list" item="item" separator=",">
		(
			#{item.userId},
			#{item.realName},
			#{item.sex},
			#{item.idTypeId},
			#{item.idNum},
			#{item.idPositiveImg},
			#{item.idReverseImg},
			#{item.idOnHandImg},
			#{item.idBankOnHandImg},
			#{item.validityStartDate},
			#{item.validityEndDate},
			#{item.bankNum},
			#{item.areaId},
			#{item.status},
			#{item.remark},
			now(),
			now(),
			now(),
			now()
		)        	
        </foreach>
    </insert>

    <!-- 修 改 (匹配有值的字段)-->
    <update id="updateByPrimaryKeySelective" parameterType="com.gaoan.forever.entity.TbHzRealnameAuthEntity">
        UPDATE tb_hz_realname_auth
        <set>
            <if test="userId != null">
            user_id = #{userId},
            </if>
            <if test="realName != null and realName != ''">
            real_name = #{realName},
            </if>
            <if test="sex != null">
            sex = #{sex},
            </if>
            <if test="idTypeId != null">
            id_type_id = #{idTypeId},
            </if>
            <if test="idNum != null and idNum != ''">
            id_num = #{idNum},
            </if>
            <if test="idPositiveImg != null and idPositiveImg != ''">
            id_positive_img = #{idPositiveImg},
            </if>
            <if test="idReverseImg != null and idReverseImg != ''">
            id_reverse_img = #{idReverseImg},
            </if>
            <if test="idOnHandImg != null and idOnHandImg != ''">
            id_on_hand_img = #{idOnHandImg},
            </if>
            <if test="idBankOnHandImg != null and idBankOnHandImg != ''">
            id_bank_on_hand_img = #{idBankOnHandImg},
            </if>
            <if test="validityStartDate != null">
            validity_start_date = #{validityStartDate},
            </if>
            <if test="validityEndDate != null">
            validity_end_date = #{validityEndDate},
            </if>
            <if test="bankNum != null and bankNum != ''">
            bank_num = #{bankNum},
            </if>
            <if test="areaId != null">
            area_id = #{areaId},
            </if>
            <if test="status != null">
            status = #{status},
            </if>
            <if test="remark != null and remark != ''">
            remark = #{remark},
            </if>
            <if test="idReviewTime != null">
            id_review_time = #{idReviewTime},
            </if>
            <if test="bankReviewTime != null">
            bank_review_time = #{bankReviewTime},
            </if>
            <if test="createTime != null">
            create_time = #{createTime},
            </if>
            update_time = now()
        </set>
        WHERE id = #{id}
    </update>

    <!-- 修 改-->
    <update id="updateByPrimaryKey" parameterType="com.gaoan.forever.entity.TbHzRealnameAuthEntity">
        UPDATE tb_hz_realname_auth
        <set>
            user_id = #{userId},
            real_name = #{realName},
            sex = #{sex},
            id_type_id = #{idTypeId},
            id_num = #{idNum},
            id_positive_img = #{idPositiveImg},
            id_reverse_img = #{idReverseImg},
            id_on_hand_img = #{idOnHandImg},
            id_bank_on_hand_img = #{idBankOnHandImg},
            validity_start_date = #{validityStartDate},
            validity_end_date = #{validityEndDate},
            bank_num = #{bankNum},
            area_id = #{areaId},
            status = #{status},
            remark = #{remark},
            id_review_time = #{idReviewTime},
            bank_review_time = #{bankReviewTime},
            update_time = now()
        </set>
        WHERE id = #{id}
    </update>
    
    <!-- 修 改用户认证状态 -->
    <update id="updateUserAuthStatus">
        UPDATE tb_hz_realname_auth 
        	SET status = #{status}, update_time = now()
        WHERE user_id = #{userId} AND status = #{lockStatus}
    </update>

    <!--根据主键删除-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM tb_hz_realname_auth WHERE id =  #{id}
    </delete>
     
      <!-- **********************自定义sql******************************** ** -->
    <select id="queryByEntity" parameterType="com.gaoan.forever.dbmodel.RealnameAuthDbModel" resultType="java.util.Map">
      SELECT ait.name as idTypeName,
	      tu.username as userAccount,
	      tu.real_name as realName,
	      ra.id,
	      ra.user_id,
	      ra.id_type_id,
	      ra.validity_end_date,
	      ra.real_name,
	      ra.sex,
	      ra.id_num,
	      ra.id_positive_img,
	      ra.id_reverse_img,
	      ra.id_head_on_img,
	      ra.remark,
	      ra.status,
	      ra.create_time,
	      ra.update_time,
	      ra.id_bank_on_hand_img
      FROM tb_hz_realname_auth ra 
      LEFT JOIN tb_trade_user tu 
      ON ra.user_id=tu.id  
      LEFT JOIN tb_auth_id_type ait 
      ON ait.id=ra.id_type_id 
      <where>
      </where>
       ORDER BY ra.update_time desc 
    </select>
    
    <resultMap id="RealnameAuthDbModelMap" type="com.gaoan.forever.dbmodel.HzRealnameAuthDbModel" >
        <result column="id" property="id" javaType="Long"/>
        <result column="user_id" property="userId" javaType="Long"/>
        <result column="real_name" property="realName" javaType="String"/>
        <result column="sex" property="sex" javaType="Integer"/>
        <result column="id_type_id" property="idTypeId" javaType="Long"/>
        <result column="id_num" property="idNum" javaType="String"/>
        <result column="id_positive_img" property="idPositiveImg" javaType="String"/>
        <result column="id_reverse_img" property="idReverseImg" javaType="String"/>
        <result column="id_on_hand_img" property="idOnHandImg" javaType="String"/>
        <result column="id_bank_on_hand_img" property="idBankOnHandImg" javaType="String"/>
        <result column="validity_start_date" property="validityStartDate" javaType="java.util.Date"/>
        <result column="validity_end_date" property="validityEndDate" javaType="java.util.Date"/>
        <result column="bank_num" property="bankNum" javaType="String"/>
        <result column="area_id" property="areaId" javaType="Long"/>
        <result column="status" property="status" javaType="Integer"/>
        <result column="remark" property="remark" javaType="String"/>
        <result column="id_review_time" property="idReviewTime" javaType="java.util.Date"/>
        <result column="bank_review_time" property="bankReviewTime" javaType="java.util.Date"/>
        <result column="create_time" property="createTime" javaType="java.util.Date"/>
        <result column="update_time" property="updateTime" javaType="java.util.Date"/>
        <result column="id_type_name" property="idTypeName" javaType="String"/>
        <result column="country" property="country" javaType="String"/>
    </resultMap>

    <select id="queryByUserId"  resultMap="RealnameAuthDbModelMap">
         SELECT
	         am."name" country,
	         ait.name id_type_name,
	         ra.* 
         FROM tb_hz_realname_auth ra 
         LEFT JOIN tb_auth_id_type ait 
         ON ait.id = ra.id_type_id 
         LEFT JOIN tb_mobile_area am 
         ON ra.area_id = am.id 
         WHERE ra.user_id = #{userId}
    </select>
    
    <select id="queryInfoNew" resultMap="RealnameAuthDbModelMap">
        SELECT
        	ar."name" country,
        	auth.*   
        FROM tb_hz_realname_auth auth 
        LEFT JOIN tb_mobile_area ar 
        	ON auth.area_id = ar.id 
        WHERE 1=1
        <if test="realnameAuth.userId != null">
            AND user_id = #{realnameAuth.userId}
        </if>
        <if test="realnameAuth.idTypeId != null">
            AND id_type_id = #{realnameAuth.idTypeId}
        </if>
        <if test="realnameAuth.realName != null and realnameAuth.realName != ''">
            AND real_name = #{realnameAuth.realName}
        </if>
        <if test="realnameAuth.sex != null">
            AND sex = #{realnameAuth.sex}
        </if>
        <if test="realnameAuth.idNum != null and realnameAuth.idNum != ''">
            AND id_num = #{realnameAuth.idNum}
        </if>
        <if test="realnameAuth.status != null">
            AND status = #{realnameAuth.status}
        </if>
        ORDER BY "id" DESC LIMIT 1
    </select>
    
    <select id="queryValidData" resultMap="BaseResultMap">
    	SELECT
    		tra.user_id,
			TRIM(REPLACE(tra.real_name, ' ','')) real_name,
			tra.sex,
			tra.id_type_id,
			UPPER(TRIM(tra.id_num)) id_num,
			tra.id_positive_img id_positive_img,
			tra.id_reverse_img id_reverse_img,
			tra.id_head_on_img id_on_hand_img,
			tra.id_bank_img id_bank_on_hand_img,
			tra.expiration_date validity_end_date,
			tra.bank_num,
			tra.area_id,
			tra.remark
		FROM
			tb_user_center_bind tucb
		INNER JOIN tb_trade_user ttu 
			ON tucb.user_id = ttu. ID
		INNER JOIN tb_realname_auth tra 
			ON ttu. ID = tra.user_id
		WHERE
			tra.ID = #{authId}
		AND UPPER(TRIM(tra.id_num)) = UPPER(TRIM(#{idNum}))
		AND TRIM(REPLACE(tra.real_name, ' ','')) = TRIM(#{realName})
		AND TRIM(tucb.makeys_user) = TRIM(#{makeysUserName})
		<!-- 正常用户,已认证,中国大陆,身份证认证,实名图片能找到 -->
		AND ttu."type" = 1
		AND tra.status = 1
		AND tra.id_type_id = 1
		AND tra.area_id = 1
		AND tra.id_positive_img NOT LIKE '/uploads/images/%'
		AND tra.id_reverse_img NOT LIKE '/uploads/images/%'
		AND tra.id_head_on_img NOT LIKE '/uploads/images/%'
		AND tra.id_bank_img NOT LIKE '/uploads/images/%'
    </select>
    
</mapper>